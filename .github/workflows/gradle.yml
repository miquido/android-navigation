name: Code analysis and tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 55

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true
          gradle-home-cache-cleanup: true

      - name: Run static analysis
        run: ./gradlew ktlint detekt sample-hilt:lintDebug sample-koin:lintDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: '**/build/reports/lint-results-*.xml'

      - name: Upload ktlint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-reports
          path: '**/build/reports/ktlint-report.xml'

      - name: Upload detekt reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detekt-reports
          path: '**/build/reports/detekt-report.xml'

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/build/test-results/test*UnitTest/**.xml'

  androidTest:
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [ 30 ]

    steps:
      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          dotnet: true # rm -rf /usr/share/dotnet
          haskell: true # rm -rf /opt/ghc...
          swap-storage: true # rm -f /mnt/swapfile (4GiB)
          docker-images: false # Takes 16s, enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true
          gradle-home-cache-cleanup: true

      - name: Build projects and run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          emulator-options: -grpc 5556 -grpc-use-jwt -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          script: ./gradlew instrumented-tests:connectedDebugAndroidTest --daemon

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.api-level }}
          path: '**/build/reports/androidTests'

# GDM Not Working

#  androidTest:
#    needs: build
#    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
#    timeout-minutes: 55
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Copy CI gradle.properties
#        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'liberica'
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@v3
#        with:
#          validate-wrappers: true
#          gradle-home-cache-cleanup: true
#
#      - name: Accept Android licenses
#        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true
#
#      - name: Run instrumented tests with GMD
#        run: >
#          ./gradlew cleanManagedDevices --unused-only &&
#          ./gradlew instrumented-tests:pixel2api30DebugAndroidTest
#          -Dorg.gradle.workers.max=1
#          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
#          -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true
#          --info
#
#      - name: Upload test reports
#        if: success() || failure()
#        uses: actions/upload-artifact@v4
#        with:
#          name: test-reports
#          path: '**/build/reports/androidTests'
